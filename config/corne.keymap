#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define SYMBOL 1
#define FNAV 2
#define MACRO 3

#define C_VOLU C_VOL_UP
#define C_VOLD C_VOL_DN
#define C_FILE C_AL_FILES

/ {
    macros {
        // Acute accents
        ZMK_MACRO(IT_AACT,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_EACT,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_IACT,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_OACT,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_UACT,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0>
                , <&macro_release &kp LALT>;
        )

        // Grave accents
        ZMK_MACRO(IT_AGRV,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N4>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_EGRV,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N2>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_IGRV,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N6>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_OGRV,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N2>
                , <&macro_release &kp LALT>;
        )
        ZMK_MACRO(IT_UGRV,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N9>
                , <&macro_release &kp LALT>;
        )

        // Euro symbol
        ZMK_MACRO(IT_EURO,
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>;
        )

        // Arrow combos (e.g. =>)
        ZMK_MACRO(LTEQ,
            bindings = <&kp LT &kp EQUAL>;
        )
        ZMK_MACRO(EQLT,
            bindings = <&kp EQUAL &kp LT>;
        )
        ZMK_MACRO(GTEQ,
            bindings = <&kp GT &kp EQUAL>;
        )
        ZMK_MACRO(EQGT,
            bindings = <&kp EQUAL &kp GT>;
        )
    };
    keymap {
        compatible = "zmk,keymap";
        qwerty_layer {
            bindings = <
    //,-----------------------------------------------------------------.                        ,-----------------------------------------------------------------.
          &kp TAB      &kp Q      &kp W      &kp E      &kp R      &kp T                               &kp Y      &kp U      &kp I      &kp O      &kp P   &kp BSPC
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LSHFT      &kp A      &kp S      &kp D      &kp F      &kp G                               &kp H      &kp J      &kp K      &kp L   &kp SEMI    &kp SQT
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LCTRL      &kp Z      &kp X      &kp C      &kp V      &kp B                               &kp N      &kp M  &kp COMMA    &kp DOT   &kp FSLH    &kp RET
    //|----------+----------+----------+----------+----------+----------+----------|  |----------+----------+----------+----------+----------+----------+----------|
                                                     &kp LGUI   &kp LALT &mo SYMBOL      &mo FNAV  &kp SPACE   &kp RSFT
            >;                                  //`--------------------------------'  `--------------------------------'
        };
        symbol_layer {
            bindings = <
    //,-----------------------------------------------------------------.                        ,-----------------------------------------------------------------.
          &kp ESC  &kp GRAVE   &kp BSLH   &kp LBRC   &kp LBKT   &kp LPAR                            &kp RPAR   &kp RBKT   &kp RBRC  &kp UNDER   &kp PLUS   &kp BSPC
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LSHFT   &kp EXCL     &kp AT   &kp HASH   &kp DLLR  &kp PRCNT                           &kp CARET   &kp AMPS   &kp STAR  &kp MINUS  &kp EQUAL   &kp PIPE
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LCTRL     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                              &kp N6     &kp N7     &kp N8     &kp N9     &kp N0    &kp RET
    //|----------+----------+----------+----------+----------+----------+----------|  |----------+----------+----------+----------+----------+----------+----------|
                                                     &kp LGUI   &kp LALT     &trans     &mo MACRO  &kp SPACE   &kp RSFT
            >;                                  //`--------------------------------'  `--------------------------------'
        };
        fnav_layer {
            bindings = <
    //,-----------------------------------------------------------------.                        ,-----------------------------------------------------------------.
          &kp ESC     &kp F9    &kp F10    &kp F11    &kp F12      &none                          &kp C_PREV &kp C_VOLD &kp C_VOLU &kp C_NEXT   &kp C_PP    &kp DEL
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LSHFT     &kp F5     &kp F6     &kp F7     &kp F8      &none                            &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT &kp C_MUTE  &kp K_APP
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LCTRL     &kp F1     &kp F2     &kp F3     &kp F4      &none                            &kp HOME  &kp PG_DN  &kp PG_UP    &kp END &kp C_STOP    &kp RET
    //|----------+----------+----------+----------+----------+----------+----------|  |----------+----------+----------+----------+----------+----------+----------|
                                                     &kp LGUI   &kp LALT  &mo MACRO        &trans  &kp SPACE   &kp RSFT
            >;                                  //`--------------------------------'  `--------------------------------'
        };
        macro_layer {
            bindings = <
    //,-----------------------------------------------------------------.                        ,-----------------------------------------------------------------.
          &kp ESC  &kp TILDE   &kp PIPE   &IT_EGRV   &none    &bt BT_PRV                          &bt BT_NXT   &IT_UGRV   &IT_IGRV   &IT_OGRV      &none    &kp DEL
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LSHFT   &IT_AGRV      &none   &IT_EACT   &none    &bt BT_CLR                          &bt BT_CLR   &IT_UACT   &IT_IACT   &IT_OACT      &EQGT &kp C_FILE
    //|----------+----------+----------+----------+----------+----------|                        |----------+----------+----------+----------+----------+----------|
        &kp LCTRL   &IT_AACT      &none   &IT_EURO   &none    &out OUT_TOG                      &out OUT_TOG   &kp CAPS   &kp SLCK &kp KP_NUM      &none    &kp RET
    //|----------+----------+----------+----------+----------+----------+----------|  |----------+----------+----------+----------+----------+----------+----------|
                                                     &kp LGUI   &kp LALT     &trans        &trans  &kp SPACE   &kp RSFT
            >;                                  //`--------------------------------'  `--------------------------------'
        };
    };
};
